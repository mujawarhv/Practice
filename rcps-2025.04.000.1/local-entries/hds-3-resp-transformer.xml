<syn:localEntry xmlns:syn="http://ws.apache.org/ns/synapse" key="hds-3-resp-transformer" type="1">
	<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
		xmlns:tem="http://tempuri.org/" 
		xmlns:s="http://schemas.xmlsoap.org/soap/envelope/"
		xmlns:a="http://schemas.datacontract.org/2004/07/ICADM.CPAPISearch.Service.DataContracts"
		version="2.0">
		<xsl:output method="xml" omit-xml-declaration="yes" indent="yes" />

      	<xsl:param name="returnCodeValue" select="//a:ReturnCode"  />
      	<xsl:param name="count" select="//a:Count"  />
        
        <xsl:template name="custom">
                <xsl:param name="resultSetSizeParam" />
                <xsl:param name="statusDescriptionParam" />
                <xsl:param name="statusCodeParam" />
                <xsl:element name="RxcomPrescriberQueryResponse"
                        inherit-namespaces="no" namespace="">
                        <xsl:attribute name="version">3.0</xsl:attribute>
                        <xsl:attribute name="resultSetSize"><xsl:value-of select="$resultSetSizeParam" /> </xsl:attribute>
                        <xsl:element name="ResponseStatus" inherit-namespaces="no" namespace="">
                                <xsl:attribute name="statusCode"><xsl:value-of select="$statusCodeParam" /></xsl:attribute>
                                <xsl:attribute name="statusDescription"><xsl:value-of select="$statusDescriptionParam" /></xsl:attribute>
                                <xsl:element name="PrescriberRecords" inherit-namespaces="no" namespace="">
                                	<xsl:choose>
                                        <xsl:when test="$resultSetSizeParam = 0">
                                           <xsl:call-template name="noResultsElement"></xsl:call-template>
                                        </xsl:when>
                                        <xsl:otherwise>
                                           <xsl:apply-templates select="//a:Providers" />
                                        </xsl:otherwise>
                                	</xsl:choose>
                                </xsl:element>
                        </xsl:element>
                </xsl:element>
        </xsl:template>

        <xsl:template match="tem:ProviderSearchResponse">
                <xsl:choose>
                        <!--  success returned - may or may not have a results list -->
                        <xsl:when test="$returnCodeValue = 1">
                            <xsl:choose>                           
		                        <xsl:when test="$count = 0">
	                                <xsl:call-template name="custom">
	                                        <xsl:with-param name="resultSetSizeParam">0</xsl:with-param>
	                                        <xsl:with-param name="statusDescriptionParam">No Prescriber records found</xsl:with-param>
	                                        <xsl:with-param name="statusCodeParam">0</xsl:with-param>
	                                </xsl:call-template>
		                        </xsl:when>
		                        <xsl:otherwise>
		                            <xsl:call-template name="custom">
				                        	<xsl:with-param name="resultSetSizeParam"><xsl:value-of select="//a:Count"  /></xsl:with-param>
				                        	<xsl:with-param name="statusDescriptionParam">Success</xsl:with-param>
				                        	<xsl:with-param name="statusCodeParam">200</xsl:with-param>
		                        	</xsl:call-template>
		                        </xsl:otherwise>
                            </xsl:choose>              
                        </xsl:when>                        
                        <!--  otherwise force return code of 0, result setSize of 0 and ActualReturnCode - StatusDescription -->
                        <xsl:otherwise>
                                <xsl:call-template name="custom">
                                        <xsl:with-param name="resultSetSizeParam">0</xsl:with-param>
                                        <xsl:with-param name="statusDescriptionParam">
                                             <xsl:copy-of select="//a:ReturnCode" /> - <xsl:value-of select="//a:StatusDescription" />
                                        </xsl:with-param>
                                        <xsl:with-param name="statusCodeParam">0</xsl:with-param>
                                </xsl:call-template>
                        </xsl:otherwise>
                </xsl:choose>
        </xsl:template>


		<xsl:template match="a:Provider">
			<xsl:element name="Prescriber">
				<xsl:element name="lastName">
					<xsl:value-of select="a:LastName" />
				</xsl:element>
				<xsl:element name="firstName">
					<xsl:value-of select="a:FirstName" />
				</xsl:element>
				<xsl:element name="midName">
					<xsl:value-of select="a:MiddleName" />
				</xsl:element>
				<xsl:element name="address">
					<xsl:value-of select="a:AddressLine1" />
				</xsl:element>
				<xsl:element name="address2">
					<xsl:value-of select="a:AddressLine2" />
				</xsl:element>
				<xsl:element name="city">
					<xsl:value-of select="a:City" />
				</xsl:element>
				<xsl:element name="state">
					<xsl:value-of select="a:State" />
				</xsl:element>
				<xsl:element name="zipCode">
					<xsl:value-of select="a:Zip5" />
				</xsl:element>
				<xsl:element name="areaCode">
				    <xsl:if test="string-length(a:Phone1) > 7">
					   <xsl:value-of select="substring(a:Phone1,1,3)" />
                    </xsl:if>
				</xsl:element>
				<xsl:element name="phone">
					<xsl:value-of select="substring(a:Phone1,string-length(a:Phone1)-6,7)" />
				</xsl:element>
				<xsl:element name="deaNum">
					<xsl:value-of select="a:DEAs/a:DEA/a:DEANumber" />
				</xsl:element>
				<xsl:element name="npiNum">
					<xsl:value-of select="a:NPINumber" />
				</xsl:element>
				<xsl:element name="stateIdNum">
					<xsl:value-of select="a:StateLicenses/a:StateLicense/a:SLNNumber" />
				</xsl:element>
				<xsl:element name="rcpsIdNum">
					<xsl:value-of select="a:AddressSurroId" />
				</xsl:element>
                <xsl:element name="vendorId">1</xsl:element>
				<xsl:element name="waiverId">
					<xsl:value-of select="a:DEAs/a:DEA/a:XDEANum" />
				</xsl:element>
				<xsl:element name="locationIdentifier" />
         		<xsl:element name="addressGroupIdentifier" />
			</xsl:element>
		</xsl:template>
		
		<!-- Needed for compatibility with clients requiring the Prescriber element  -->		
        <xsl:template name="noResultsElement">
		      <xsl:element name="Prescriber">
		         <xsl:element name="lastName" />
		         <xsl:element name="firstName" />
		         <xsl:element name="midName" />
		         <xsl:element name="address" />
		         <xsl:element name="address2" />
		         <xsl:element name="city" />
		         <xsl:element name="state" />
		         <xsl:element name="zipCode" />
		         <xsl:element name="areaCode" />
		         <xsl:element name="phone" />
		         <xsl:element name="deaNum" /> 
		         <xsl:element name="npiNum" />
		         <xsl:element name="stateIdNum" />
		         <xsl:element name="rcpsIdNum" />
		         <xsl:element name="vendorId" />
		         <xsl:element name="waiverId" />
				 <xsl:element name="locationIdentifier" />
         		<xsl:element name="addressGroupIdentifier" />
		      </xsl:element>
        </xsl:template>
	</xsl:stylesheet>
</syn:localEntry>